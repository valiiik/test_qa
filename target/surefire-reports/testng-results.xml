<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="8" passed="7">
  <reporter-output>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "email" - true (enter just name)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "pass" - true (enter name and email)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "second field pass" - true (enter name, email, pass)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "first field pass" - true (enter name, email, second field pass)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "name" - true (enter just email)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "name" - true (enter just pass)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "name" - true (enter email and pass)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "name" - true (enter all field, without name)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Expected results of the empty field "email" - true (enter all field, without email)"]]>
    </line>
    <line>
      <![CDATA[INFO: "Adding products are present in the wishlist "]]>
    </line>
    <line>
      <![CDATA[INFO: "Products being compared are present at comparison page "]]>
    </line>
    <line>
      <![CDATA[INFO: "price of the first item converges. Test completed successful - ArrayList"]]>
    </line>
    <line>
      <![CDATA[INFO: "Adding product are present in compare page"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №1 Is Checked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №2 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №3 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №4 Is Checked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №5 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №6 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №7 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №8 Is UnChecked"]]>
    </line>
    <line>
      <![CDATA[INFO: "checkbox №9 Is UnChecked"]]>
    </line>
  </reporter-output>
  <suite name="Suite1" duration-ms="70162" started-at="2015-04-01T20:41:52Z" finished-at="2015-04-01T20:43:02Z">
    <groups>
    </groups>
    <test name="NegativeRegTest" duration-ms="15123" started-at="2015-04-01T20:41:52Z" finished-at="2015-04-01T20:42:07Z">
      <class name="testing.NegativeRegistrationTest">
        <test-method status="PASS" signature="negativeRegistrationTest()[pri:0, instance:testing.NegativeRegistrationTest@39757c6f]" name="negativeRegistrationTest" duration-ms="15115" started-at="2015-04-01T23:41:52Z" finished-at="2015-04-01T23:42:07Z">
          <reporter-output>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "email" - true (enter just name)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "pass" - true (enter name and email)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "second field pass" - true (enter name, email, pass)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "first field pass" - true (enter name, email, second field pass)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "name" - true (enter just email)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "name" - true (enter just pass)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "name" - true (enter email and pass)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "name" - true (enter all field, without name)"]]>
            </line>
            <line>
              <![CDATA[INFO: "Expected results of the empty field "email" - true (enter all field, without email)"]]>
            </line>
          </reporter-output>
        </test-method> <!-- negativeRegistrationTest -->
      </class> <!-- testing.NegativeRegistrationTest -->
    </test> <!-- NegativeRegTest -->
    <test name="AddToWishListProduct" duration-ms="14937" started-at="2015-04-01T20:42:07Z" finished-at="2015-04-01T20:42:22Z">
      <class name="testing.WishListProduct">
        <test-method status="PASS" signature="addProductToWishList(java.lang.String, java.lang.String)[pri:0, instance:testing.WishListProduct@545b2144]" name="addProductToWishList" duration-ms="14935" started-at="2015-04-01T23:42:07Z" data-provider="dp" finished-at="2015-04-01T23:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INTEL Core i3-3250 LGA1155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INTEL Core i5-4690K LGA1150]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[INFO: "Adding products are present in the wishlist "]]>
            </line>
          </reporter-output>
        </test-method> <!-- addProductToWishList -->
      </class> <!-- testing.WishListProduct -->
    </test> <!-- AddToWishListProduct -->
    <test name="AddToBuy" duration-ms="2576" started-at="2015-04-01T20:42:22Z" finished-at="2015-04-01T20:42:25Z">
      <class name="testing.BuyProduct">
        <test-method status="PASS" signature="BuyItemsFromWishList()[pri:0, instance:testing.BuyProduct@7ba3b8a1]" name="BuyItemsFromWishList" duration-ms="2575" started-at="2015-04-01T23:42:22Z" finished-at="2015-04-01T23:42:25Z">
          <reporter-output>
            <line>
              <![CDATA[INFO: "Products being compared are present at comparison page "]]>
            </line>
          </reporter-output>
        </test-method> <!-- BuyItemsFromWishList -->
      </class> <!-- testing.BuyProduct -->
    </test> <!-- AddToBuy -->
    <test name="Prices1" duration-ms="7558" started-at="2015-04-01T20:42:25Z" finished-at="2015-04-01T20:42:32Z">
      <class name="testing.ComparePrices2">
        <test-method status="PASS" signature="comparePrices(java.lang.String, java.lang.String)[pri:0, instance:testing.ComparePrices2@158ec7a7]" name="comparePrices" duration-ms="7556" started-at="2015-04-01T23:42:25Z" data-provider="dp" finished-at="2015-04-01T23:42:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INTEL Core i3-3250 LGA1155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INTEL Core i5-4690K LGA1150]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[INFO: "price of the first item converges. Test completed successful - ArrayList"]]>
            </line>
          </reporter-output>
        </test-method> <!-- comparePrices -->
      </class> <!-- testing.ComparePrices2 -->
    </test> <!-- Prices1 -->
    <test name="topMenu" duration-ms="7535" started-at="2015-04-01T20:42:32Z" finished-at="2015-04-01T20:42:40Z">
      <class name="testing.TopMenu">
        <test-method status="PASS" signature="topMenu()[pri:0, instance:testing.TopMenu@347db7e6]" name="topMenu" duration-ms="7534" started-at="2015-04-01T23:42:32Z" finished-at="2015-04-01T23:42:40Z">
          <reporter-output>
            <line>
              <![CDATA[INFO: "Adding product are present in compare page"]]>
            </line>
          </reporter-output>
        </test-method> <!-- topMenu -->
      </class> <!-- testing.TopMenu -->
    </test> <!-- topMenu -->
    <test name="ComparePricesWithDB" duration-ms="7493" started-at="2015-04-01T20:42:40Z" finished-at="2015-04-01T20:42:47Z">
      <class name="testing.ComparePricesWithDB">
        <test-method status="FAIL" signature="comparePrices(java.lang.String, java.lang.String)[pri:0, instance:testing.ComparePricesWithDB@40aea2c]" name="comparePrices" duration-ms="7490" started-at="2015-04-01T23:42:40Z" data-provider="dp" finished-at="2015-04-01T23:42:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[INTEL Core i3-3250 LGA1155]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[INTEL Core i5-4690K LGA1150]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Product Corei3 is present in DB expected [Intel Core i3-3250 LGA1155, 3.5GHz, Box (BX80637I33250SR0YX)] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Product Corei3 is present in DB expected [Intel Core i3-3250 LGA1155, 3.5GHz, Box (BX80637I33250SR0YX)] but found [null]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at testing.ComparePricesWithDB.comparePrices(ComparePricesWithDB.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- comparePrices -->
      </class> <!-- testing.ComparePricesWithDB -->
    </test> <!-- ComparePricesWithDB -->
    <test name="Checkbox" duration-ms="5313" started-at="2015-04-01T20:42:47Z" finished-at="2015-04-01T20:42:53Z">
      <class name="testing.Checkbox">
        <test-method status="PASS" signature="Checkbox()[pri:0, instance:testing.Checkbox@1226ad0a]" name="Checkbox" duration-ms="5313" started-at="2015-04-01T23:42:47Z" finished-at="2015-04-01T23:42:53Z">
          <reporter-output>
            <line>
              <![CDATA[INFO: "checkbox №1 Is Checked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №2 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №3 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №4 Is Checked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №5 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №6 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №7 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №8 Is UnChecked"]]>
            </line>
            <line>
              <![CDATA[INFO: "checkbox №9 Is UnChecked"]]>
            </line>
          </reporter-output>
        </test-method> <!-- Checkbox -->
      </class> <!-- testing.Checkbox -->
    </test> <!-- Checkbox -->
    <test name="ClearAll" duration-ms="9598" started-at="2015-04-01T20:42:53Z" finished-at="2015-04-01T20:43:02Z">
      <class name="testing.DeleteAll">
        <test-method status="PASS" signature="initEnv()[pri:0, instance:testing.DeleteAll@62aa2650]" name="initEnv" is-config="true" duration-ms="3870" started-at="2015-04-01T23:41:48Z" finished-at="2015-04-01T23:41:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initEnv -->
        <test-method status="PASS" signature="deleteAll()[pri:0, instance:testing.DeleteAll@62aa2650]" name="deleteAll" duration-ms="9598" started-at="2015-04-01T23:42:53Z" finished-at="2015-04-01T23:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAll -->
        <test-method status="PASS" signature="envShut()[pri:0, instance:testing.DeleteAll@62aa2650]" name="envShut" is-config="true" duration-ms="80" started-at="2015-04-01T23:43:02Z" finished-at="2015-04-01T23:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- envShut -->
      </class> <!-- testing.DeleteAll -->
    </test> <!-- ClearAll -->
  </suite> <!-- Suite1 -->
</testng-results>
